pipeline {
    agent { label 'agent-1' }
     // Specify the agent using a label
    // options {
    //     ansiColor('xterm') // Enable ANSI color in logs
    // }


    // parameters {
    //     string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')

    //     text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')

    //     booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')

    //     choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')

    //     password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    // }
    environment {
       NAME="node"
       TIME_STAMP=""
       ZIPNAME=""
   }
    stages {

       stage('Set Environment Variables'){
            steps {
              sh '''
              env.TIME_STAMP=$(date +'%d%m%y')
              env.ZIPNAME="${NAME}-${TIMESTAMP}.zip"

              '''
              
            }
       }
        stage('install dependecies') {
          
            steps {
                dir('catalogue'){
                sh 'npm install' // Fixed missing space and quotes
            }
            }
        }
        // stage('scan the code'){
        //     steps{
        //         dir('catalogue'){
                
        //         sh 'sonar-scanner'
        //     }
        // }
        // }  

   
        stage('build') {
          
            steps {
                sh '''
                pwd
              ls -latr
              
              zip -r "${env.ZIPNAME}" catalogue/* -x ".git" "*.zip" "Jenkinsfile"
              cp $zipname /tmp/


              ''' // Fixed missing space and quotes
              
            }
            }

        stage("artificat upload"){
                steps{

                        nexusArtifactUploader(
                        nexusVersion: 'nexus3',
                        protocol: 'http',
                        nexusUrl: '3.84.115.69:8081/',
                        groupId: 'com.roboshop',
                        version: 1.0,
                        repository: 'catalogue',
                        credentialsId: 'nexus',
                        artifacts: [
                            [artifactId: catalogue,
                            classifier: '',
                            file: "${env.ZIPNAME}",
                            type: 'zip']
        ])
                }
            }
       
    }
    post {
        // always{
        //  deleteDir()
        //     echo "Workspace cleared"
        //     }
        success {
            echo "it will work for success"
        }
        failure {
            echo "it will work for failure"
        }
    }
}
