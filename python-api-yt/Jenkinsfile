pipeline{
    agent{
        docker {
            image  'python:3.11-slim'
            args    '-u root'
        }
    }
    stages{
        stage("checkout-code"){
            steps{
                checkout scm
            
            }
        }
        stage("PR-name"){
            when{
                changeRequest()
            }
            steps{
                script{
                    def title=env.CHANGE_TITLE ?: ""
                    if (!title.startsWith("PROJ-")){
                        error("pr must start with jira id like PROJ-1234")
                    }
                }
            }
        }
        stage("install dependencies"){
            steps{
                sh ''' 
                cat /etc/os-release
                ls -lart
                cd python-api-yt
                ls -lart
                pip install -r requirements.txt
            
                '''
            }
        }
        stage("run the test"){
            steps{
                sh '''
                cd python-api-yt
                ls -lart
                python -m pytest -v -s --junitxml=results.xml || true
                '''
            }
        }
        stage("archive results"){
            steps{
               junit 'python-api-yt/results.xml'
            }
        }
    }
    post{
        success{
            echo "Build and test passed"
        }
        failure{
            echo "Build test failed"
        }
        always{
            echo 'Cleaning working dir'
            deleteDir()
        }
    }

}
